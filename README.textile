h1. Noregress - A Java Library for Performance Regression Tests

Noregress lets you write simple junit tests to ensure your websites' performance does not degrade over time.

Noregress uses "Google PageSpeed Online API":http://code.google.com/apis/pagespeedonline/v1/reference.html. 
You will need to register with Google and obtain a (free) API key before using Noregress

h2. Using Noregress

<pre>
<code>
PageTester client = new PageSpeedOnlineV1Service("<YOUR-PAGE-SPEED-API-KEY>");
Result result = client.testPage(new Request("http://github.com"));

assertEquals("Http Response Code", 200, result.getResponseCode());
assertTrue("Overall page score below threshold", result.getOverallScore() > 80);
assertTrue("Too many resources on page", result.getNumberResources() < 35);
assertTrue("Too many JS resources on page", result.getNumberJsResources() < 5);
assertEquals("404's on page", 100, result.getScoreFor(Rule.AvoidBadRequests));
assertTrue("Poor cache headers on external resources", result.getScoreFor(Rule.LeverageBrowserCaching) > 95);
assertTrue("Minify Javascript", result.getScoreFor(Rule.MinifyJavaScript) > 95);
assertEquals("Same image/css/js served from different URLs", 100, result.getScoreFor(Rule.ServeResourcesFromAConsistentUrl));
assertEquals("Images are being scaled in html/css", 100, result.getScoreFor(Rule.ServeScaledImages));

//assertTrue("Sprite Images, or use data:uri", result.getScoreFor(Rule.SpriteImages) > 80);

</code>
</pre>
